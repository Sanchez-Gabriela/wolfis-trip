{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielasanchez/projects/wolfis-trip/components/Header.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Head from 'next/head';\n/** @jsx jsx */\n\n/** @jsxFrag React.Fragment */\n\nimport { jsx, css } from '@emotion/core';\nexport default function Header() {\n  const logo = css`\n    font-size: 40px;\n    color: #555555;\n    border: 2px solid #555555;\n    font-family: 'Karla', sans-serif;\n    margin-top: 20px;\n    text-decoration: none;\n    margin-left: -15px;\n  `;\n  const navbar = css`\n    width: 100%;\n    display: flex;\n    color: #555555;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    background: #ffff;\n    font-family: 'Karla', sans-serif;\n    margin-left: 30px;\n    margin-top: 20px;\n  `;\n  const links = css`\n    padding-right: 30px;\n    background: #4abdac;\n    border-radius: 1px;\n    padding-left: 30px;\n    margin-right: 10px;\n    font-size: 1.5rem;\n    text-decoration: none;\n    color: #ffff;\n    &:hover {\n      color: #eb5e5f;\n    }\n  `;\n  const navbarLinkList = css`\n    margin-right: 20px;\n  `;\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const linkList = [{\n    name: 'About',\n    url: '/about'\n  }];\n  console.log('username', user);\n\n  if (user === null) {\n    linkList.push({\n      name: 'Register',\n      url: '/register'\n    });\n    linkList.push({\n      name: 'Login',\n      url: '/login'\n    });\n  } else {\n    linkList.push({\n      name: 'Logout',\n      url: '/logout'\n    });\n  }\n\n  useEffect(() => {\n    fetch('/api/checkLogin', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      } // body: JSON.stringify({ }),\n\n    }).then(response => {\n      console.log('success', response);\n\n      if (response.ok !== true) {\n        throw new Error('Error fetching session');\n      }\n\n      return response.json();\n    }).then(json => {\n      if (json === true) {\n        setUser('TODO: add the user');\n      }\n    }).catch(err => {\n      console.error('error fetching session', err);\n    });\n  }, []);\n  return jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, jsx(\"div\", {\n    css: navbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, jsx(\"div\", {\n    className: \"logo-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, jsx(Link, {\n    href: '/index',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, jsx(\"a\", {\n    href: \"#a\",\n    css: logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Wolfi\"))), jsx(\"div\", {\n    css: navbarLinkList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, linkList.map(link => {\n    return jsx(Link, {\n      key: link.url,\n      href: link.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, jsx(\"a\", {\n      href: \"#a\",\n      css: links,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, link.name));\n  }))));\n}","map":{"version":3,"sources":["/Users/gabrielasanchez/projects/wolfis-trip/components/Header.js"],"names":["React","useState","useEffect","Link","Head","jsx","css","Header","logo","navbar","links","navbarLinkList","user","setUser","linkList","name","url","console","log","push","fetch","method","headers","then","response","ok","Error","json","catch","err","error","map","link"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Head from 'next/head';\n/** @jsx jsx */\n/** @jsxFrag React.Fragment */\nimport { jsx, css } from '@emotion/core';\n\nexport default function Header() {\n  const logo = css`\n    font-size: 40px;\n    color: #555555;\n    border: 2px solid #555555;\n    font-family: 'Karla', sans-serif;\n    margin-top: 20px;\n    text-decoration: none;\n    margin-left: -15px;\n  `;\n\n  const navbar = css`\n    width: 100%;\n    display: flex;\n    color: #555555;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    background: #ffff;\n    font-family: 'Karla', sans-serif;\n    margin-left: 30px;\n    margin-top: 20px;\n  `;\n\n  const links = css`\n    padding-right: 30px;\n    background: #4abdac;\n    border-radius: 1px;\n    padding-left: 30px;\n    margin-right: 10px;\n    font-size: 1.5rem;\n    text-decoration: none;\n    color: #ffff;\n    &:hover {\n      color: #eb5e5f;\n    }\n  `;\n\n  const navbarLinkList = css`\n    margin-right: 20px;\n  `;\n  const [user, setUser] = useState(null);\n  const linkList = [{ name: 'About', url: '/about' }];\n\n  console.log('username', user);\n\n  if (user === null) {\n    linkList.push({ name: 'Register', url: '/register' });\n    linkList.push({ name: 'Login', url: '/login' });\n  } else {\n    linkList.push({ name: 'Logout', url: '/logout' });\n  }\n\n  useEffect(() => {\n    fetch('/api/checkLogin', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      // body: JSON.stringify({ }),\n    })\n      .then((response) => {\n        console.log('success', response);\n        if (response.ok !== true) {\n          throw new Error('Error fetching session');\n        }\n        return response.json();\n      })\n      .then((json) => {\n        if (json === true) {\n          setUser('TODO: add the user');\n        }\n      })\n      .catch((err) => {\n        console.error('error fetching session', err);\n      });\n  }, []);\n\n  return (\n    <div>\n      {/* <style>\n        @import\n        url('https://fonts.googleapis.com/css2?family=Major+Mono+Display&display=swap');\n      </style> */}\n      <div css={navbar}>\n        <div className=\"logo-header\">\n          <Link href={'/index'}>\n            <a href=\"#a\" css={logo}>\n              Wolfi\n            </a>\n          </Link>\n        </div>\n        <div css={navbarLinkList}>\n          {linkList.map((link) => {\n            return (\n              <Link key={link.url} href={link.url}>\n                <a href=\"#a\" css={links}>\n                  {link.name}\n                </a>\n              </Link>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}