{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/gabrielasanchez/projects/wolfis-trip/components/Datepicker.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/** @jsx jsx */\nimport { useState } from 'react';\nimport { useDatepicker, START_DATE } from '@datepicker-react/hooks';\nimport { jsx } from '@emotion/core';\nimport Month from './Month';\nimport NavButton from './NavButton';\nimport DatepickerContext from './datepickerContext';\nexport default function Datepicker(props) {\n  _s();\n\n  var _this = this;\n\n  var _useDatepicker = useDatepicker({\n    startDate: state.startDate,\n    endDate: state.endDate,\n    focusedInput: state.focusedInput,\n    onDatesChange: handleDateChange\n  }),\n      firstDayOfWeek = _useDatepicker.firstDayOfWeek,\n      activeMonths = _useDatepicker.activeMonths,\n      isDateSelected = _useDatepicker.isDateSelected,\n      isDateHovered = _useDatepicker.isDateHovered,\n      isFirstOrLastSelectedDate = _useDatepicker.isFirstOrLastSelectedDate,\n      isDateBlocked = _useDatepicker.isDateBlocked,\n      isDateFocused = _useDatepicker.isDateFocused,\n      focusedDate = _useDatepicker.focusedDate,\n      onDateHover = _useDatepicker.onDateHover,\n      onDateSelect = _useDatepicker.onDateSelect,\n      onDateFocus = _useDatepicker.onDateFocus,\n      goToPreviousMonths = _useDatepicker.goToPreviousMonths,\n      goToNextMonths = _useDatepicker.goToNextMonths;\n\n  function handleDateChange(data) {\n    if (!data.focusedInput) {\n      setState(_objectSpread(_objectSpread({}, data), {}, {\n        focusedInput: START_DATE\n      }));\n    } else {\n      setState(data);\n    }\n  }\n\n  return jsx(DatepickerContext.Provider, {\n    value: {\n      focusedDate: focusedDate,\n      isDateFocused: isDateFocused,\n      isDateSelected: isDateSelected,\n      isDateHovered: isDateHovered,\n      isDateBlocked: isDateBlocked,\n      isFirstOrLastSelectedDate: isFirstOrLastSelectedDate,\n      onDateSelect: onDateSelect,\n      onDateFocus: onDateFocus,\n      onDateHover: onDateHover\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Start date: \"), state.startDate && state.startDate.toLocaleString()), jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"End date: \"), state.endDate && state.endDate.toLocaleString()), jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), jsx(NavButton, {\n    onClick: goToPreviousMonths,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Previous\"), jsx(NavButton, {\n    onClick: goToNextMonths,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Next\"), jsx(\"div\", {\n    css: {\n      fontFamily: 'Karla',\n      display: 'grid',\n      margin: '32px 0 0',\n      gridTemplateColumns: \"repeat(\".concat(activeMonths.length, \", 300px)\"),\n      gridGap: '0 64px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, activeMonths.map(function (month) {\n    return jsx(Month, {\n      key: \"\".concat(month.year, \"-\").concat(month.month),\n      year: month.year,\n      month: month.month,\n      firstDayOfWeek: firstDayOfWeek,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    });\n  })));\n}\n\n_s(Datepicker, \"JmMZ5H5e/eOfANGcBdIerOOqlt8=\", false, function () {\n  return [useDatepicker];\n});\n\n_c = Datepicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"Datepicker\");","map":{"version":3,"sources":["/Users/gabrielasanchez/projects/wolfis-trip/components/Datepicker.js"],"names":["useState","useDatepicker","START_DATE","jsx","Month","NavButton","DatepickerContext","Datepicker","props","startDate","state","endDate","focusedInput","onDatesChange","handleDateChange","firstDayOfWeek","activeMonths","isDateSelected","isDateHovered","isFirstOrLastSelectedDate","isDateBlocked","isDateFocused","focusedDate","onDateHover","onDateSelect","onDateFocus","goToPreviousMonths","goToNextMonths","data","setState","toLocaleString","fontFamily","display","margin","gridTemplateColumns","length","gridGap","map","month","year"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { useState } from 'react';\nimport { useDatepicker, START_DATE } from '@datepicker-react/hooks';\nimport { jsx } from '@emotion/core';\nimport Month from './Month';\nimport NavButton from './NavButton';\nimport DatepickerContext from './datepickerContext';\n\nexport default function Datepicker(props) {\n  const {\n    firstDayOfWeek,\n    activeMonths,\n    isDateSelected,\n    isDateHovered,\n    isFirstOrLastSelectedDate,\n    isDateBlocked,\n    isDateFocused,\n    focusedDate,\n    onDateHover,\n    onDateSelect,\n    onDateFocus,\n    goToPreviousMonths,\n    goToNextMonths,\n  } = useDatepicker({\n    startDate: state.startDate,\n    endDate: state.endDate,\n    focusedInput: state.focusedInput,\n    onDatesChange: handleDateChange,\n  });\n\n  function handleDateChange(data) {\n    if (!data.focusedInput) {\n      setState({ ...data, focusedInput: START_DATE });\n    } else {\n      setState(data);\n    }\n  }\n\n  return (\n    <DatepickerContext.Provider\n      value={{\n        focusedDate,\n        isDateFocused,\n        isDateSelected,\n        isDateHovered,\n        isDateBlocked,\n        isFirstOrLastSelectedDate,\n        onDateSelect,\n        onDateFocus,\n        onDateHover,\n      }}\n    >\n      {/* <div>\n        <strong>Focused input: </strong>\n        {state.focusedInput}\n      </div> */}\n      <br />\n      <div>\n        <strong>Start date: </strong>\n        {state.startDate && state.startDate.toLocaleString()}\n      </div>\n      <br />\n      <div>\n        <strong>End date: </strong>\n        {state.endDate && state.endDate.toLocaleString()}\n      </div>\n      <br />\n      <strong></strong>\n\n      <NavButton onClick={goToPreviousMonths}>Previous</NavButton>\n      <NavButton onClick={goToNextMonths}>Next</NavButton>\n\n      <div\n        css={{\n          fontFamily: 'Karla',\n          display: 'grid',\n          margin: '32px 0 0',\n          gridTemplateColumns: `repeat(${activeMonths.length}, 300px)`,\n          gridGap: '0 64px',\n        }}\n      >\n        {activeMonths.map((month) => (\n          <Month\n            key={`${month.year}-${month.month}`}\n            year={month.year}\n            month={month.month}\n            firstDayOfWeek={firstDayOfWeek}\n          />\n        ))}\n      </div>\n    </DatepickerContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}