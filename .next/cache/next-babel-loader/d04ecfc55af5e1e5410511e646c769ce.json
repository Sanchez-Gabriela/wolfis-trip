{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielasanchez/projects/wolfis-trip/pages/interests.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport MultiSelect from 'react-multi-select-component';\n/** @jsx jsx */\n\n/** @jsxFrag React.Fragment */\n\nimport { jsx, css } from '@emotion/core';\nimport Link from 'next/link';\nimport Datepicker from '../components/Datepicker';\nimport Header from '../components/Header';\nimport { START_DATE } from '@datepicker-react/hooks';\nimport Cookie from 'js-cookie';\nimport { differenceInCalendarDays, eachDayOfInterval } from 'date-fns'; //================================================================================\n// Style\n//================================================================================\n\nconst app = css`\n  min-height: 100vh;\n  padding: 0 0.5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Karla', sans-serif;\n`;\nconst h2 = css`\n  color: #4abdac;\n  font-family: 'Karla', sans-serif;\n  letter-spacing: 0.1em;\n  text-align: center;\n  padding-top: 10px;\n  padding-bottom: 10px;\n`;\nconst dropdown = css`\n  width: 50%;\n  margin: auto;\n`;\nconst readyToGo = css`\n  color: #f7b733;\n  font-size: 40px;\n  text-decoration: none;\n  font-family: 'Karla', sans-serif;\n  margin-left: 40%;\n`;\nconst calendar = css`\n  margin: auto;\n`;\nconst main = css`\n  padding: 5rem 0;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 20px;\n  font-family: 'Karla', sans-serif;\n`;\nconst divToGo = css``;\nconst button = css`\n  width: 70px;\n  font-family: 'Karla', sans-serif;\n  margin: auto;\n  margin-top: 40px;\n  border-radius: 4px;\n  color: #4abdac;\n  border: 2px solid #4abdac;\n  padding: 10px;\n  font-weight: bold;\n  margin-bottom: 50px;\n`;\nconst selectButton = css`\n  width: 70px;\n  font-family: 'Karla', sans-serif;\n  text-align: center;\n  margin-top: 40px;\n  border-radius: 4px;\n  color: #4abdac;\n  border: 2px solid #4abdac;\n  padding: 10px;\n  font-weight: bold;\n  margin-bottom: 30px;\n`;\nconst tags = css`\n  height: 500px;\n`;\nconst dates = css`\n  list-style: none;\n  line-height: 2.5;\n  font-size: 16px;\n`;\nconst section = css`\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  margin: auto;\n  font-size: 20px;\n  line-height: 2.5;\n`; //================================================================================\n// Function\n//================================================================================\n\nexport default function Interests() {\n  // fetch(\n  //   'https://data.wien.gv.at/daten/geo?service=WFS&request=GetFeature&version=1.1.0&typeName=ogdwien:SPAZIERPUNKTOGD &srsName=EPSG:4326&outputFormat=json',\n  // )\n  //   .then((res) => res.json())\n  //   .then((json) => console.log(json));\n  const options = [{\n    value: '1',\n    label: 'sights'\n  }, {\n    value: '2',\n    label: 'classical music'\n  }, {\n    value: '3',\n    label: 'palaces'\n  }, {\n    value: '4',\n    label: 'parks'\n  }, {\n    value: '5',\n    label: 'churchs'\n  }, {\n    value: '6',\n    label: 'markets'\n  }, {\n    value: '7',\n    label: 'coffee houses'\n  }, {\n    value: '8',\n    label: 'typical food'\n  }, {\n    value: '9',\n    label: 'vegan food'\n  }, {\n    value: '10',\n    label: 'museums'\n  }, {\n    value: '11',\n    label: 'theaters'\n  }, {\n    value: '12',\n    label: 'clubs'\n  }]; //multiselector\n\n  const {\n    0: selected,\n    1: setSelected\n  } = useState([]); //calendar\n\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    startDate: null,\n    endDate: null,\n    focusedInput: START_DATE\n  });\n  const result = differenceInCalendarDays(state.endDate, state.startDate);\n  const resultDays = result + 1; // alert('You have selected ' + resultDays + 'day(s)');\n\n  console.log(resultDays); // function array() {\n\n  let datesInInterval = [];\n\n  if (state.startDate !== null && state.endDate !== null) {\n    datesInInterval = eachDayOfInterval({\n      start: state.startDate,\n      end: state.endDate\n    });\n  } // const [select, setSelect] = useState(['']);\n\n\n  const {\n    0: journeyId,\n    1: setJourneyId\n  } = useState();\n  return jsx(React.Fragment, null, jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css2?family=Karla&display=swap\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }), jsx(\"div\", {\n    css: app,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }), jsx(\"div\", {\n    css: main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, jsx(\"h2\", {\n    css: h2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, \"1. Choose your dates \"), jsx(\"div\", {\n    css: calendar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, jsx(Datepicker, {\n    state: state,\n    setState: setState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  })), state.startDate !== null && state.endDate !== null && jsx(\"button\", {\n    css: button,\n    onClick: () => {\n      fetch('/api/journey', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          startDate: state.startDate.toISOString().split('T')[0],\n          endDate: state.endDate.toISOString().split('T')[0],\n          token: Cookie.get('token')\n        }) // body data type must match \"Content-Type\" header\n\n      }).then(response => {\n        console.log(response);\n        return response.json();\n      }).then(json => {\n        console.log(json.id);\n        setJourneyId(json.id);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"submit\"), jsx(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, jsx(\"ul\", {\n    css: section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, \"Choose for each day the places you want to visit:\", datesInInterval.map(date => {\n    return jsx(\"li\", {\n      css: dates,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 24\n      }\n    }, date.toDateString());\n  }))), jsx(\"div\", {\n    css: tags,\n    hidden: !journeyId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, jsx(\"h2\", {\n    css: h2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, \"2. What are your interests:\"), jsx(\"div\", {\n    css: dropdown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, jsx(\"pre\", {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }\n  }, JSON.stringify(selected)), jsx(MultiSelect, {\n    options: options,\n    value: selected,\n    onChange: setSelected,\n    labelledBy: 'Select',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }), jsx(\"button\", {\n    onClick: () => {\n      fetch('/api/tags', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          placeIds: selected.map(tag => {\n            return tag.value;\n          }),\n          journeyId: journeyId\n        }) // body data type must match \"Content-Type\" header\n\n      }).then(response => {\n        console.log(response);\n        return response.json();\n      }).then(json => {\n        console.log(json);\n        JSON.stringify(json);\n      });\n    },\n    css: selectButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }, \"submit\")))), jsx(\"div\", {\n    css: divToGo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }, jsx(Link, {\n    href: '/journey/' + journeyId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }, jsx(\"a\", {\n    href: \"#a\",\n    css: readyToGo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, \"Get your plan! \\u226B\")))));\n}","map":{"version":3,"sources":["/Users/gabrielasanchez/projects/wolfis-trip/pages/interests.js"],"names":["React","useState","MultiSelect","jsx","css","Link","Datepicker","Header","START_DATE","Cookie","differenceInCalendarDays","eachDayOfInterval","app","h2","dropdown","readyToGo","calendar","main","divToGo","button","selectButton","tags","dates","section","Interests","options","value","label","selected","setSelected","state","setState","startDate","endDate","focusedInput","result","resultDays","console","log","datesInInterval","start","end","journeyId","setJourneyId","fetch","method","headers","body","JSON","stringify","toISOString","split","token","get","then","response","json","id","map","date","toDateString","Accept","placeIds","tag"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA;;AACA;;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,wBAAT,EAAmCC,iBAAnC,QAA4D,UAA5D,C,CAEA;AACA;AACA;;AAEA,MAAMC,GAAG,GAAGR,GAAI;;;;;;;;CAAhB;AAUA,MAAMS,EAAE,GAAGT,GAAI;;;;;;;CAAf;AASA,MAAMU,QAAQ,GAAGV,GAAI;;;CAArB;AAKA,MAAMW,SAAS,GAAGX,GAAI;;;;;;CAAtB;AAQA,MAAMY,QAAQ,GAAGZ,GAAI;;CAArB;AAIA,MAAMa,IAAI,GAAGb,GAAI;;;;;;;;;CAAjB;AAWA,MAAMc,OAAO,GAAGd,GAAI,EAApB;AAEA,MAAMe,MAAM,GAAGf,GAAI;;;;;;;;;;;CAAnB;AAaA,MAAMgB,YAAY,GAAGhB,GAAI;;;;;;;;;;;CAAzB;AAaA,MAAMiB,IAAI,GAAGjB,GAAI;;CAAjB;AAIA,MAAMkB,KAAK,GAAGlB,GAAI;;;;CAAlB;AAMA,MAAMmB,OAAO,GAAGnB,GAAI;;;;;;;CAApB,C,CASA;AACA;AACA;;AAEA,eAAe,SAASoB,SAAT,GAAqB;AAClC;AACA;AACA;AACA;AACA;AAEA,QAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GADc,EAEd;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAFc,EAGd;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAHc,EAId;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAJc,EAKd;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GALc,EAMd;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GANc,EAOd;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAPc,EAQd;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GARc,EASd;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GATc,EAUd;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAVc,EAWd;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAXc,EAYd;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAZc,CAAhB,CAPkC,CAsBlC;;AACA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0B5B,QAAQ,CAAC,EAAD,CAAxC,CAvBkC,CAyBlC;;AACA,QAAM;AAAA,OAAC6B,KAAD;AAAA,OAAQC;AAAR,MAAoB9B,QAAQ,CAAC;AACjC+B,IAAAA,SAAS,EAAE,IADsB;AAEjCC,IAAAA,OAAO,EAAE,IAFwB;AAGjCC,IAAAA,YAAY,EAAE1B;AAHmB,GAAD,CAAlC;AAMA,QAAM2B,MAAM,GAAGzB,wBAAwB,CAACoB,KAAK,CAACG,OAAP,EAAgBH,KAAK,CAACE,SAAtB,CAAvC;AACA,QAAMI,UAAU,GAAGD,MAAM,GAAG,CAA5B,CAjCkC,CAkClC;;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ,EAnCkC,CAqClC;;AACA,MAAIG,eAAe,GAAG,EAAtB;;AACA,MAAIT,KAAK,CAACE,SAAN,KAAoB,IAApB,IAA4BF,KAAK,CAACG,OAAN,KAAkB,IAAlD,EAAwD;AACtDM,IAAAA,eAAe,GAAG5B,iBAAiB,CAAC;AAClC6B,MAAAA,KAAK,EAAEV,KAAK,CAACE,SADqB;AAElCS,MAAAA,GAAG,EAAEX,KAAK,CAACG;AAFuB,KAAD,CAAnC;AAID,GA5CiC,CA8ClC;;;AAEA,QAAM;AAAA,OAACS,SAAD;AAAA,OAAYC;AAAZ,MAA4B1C,QAAQ,EAA1C;AAEA,SACE,0BACE;AACE,IAAA,IAAI,EAAC,6DADP;AAEE,IAAA,GAAG,EAAC,YAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AAAK,IAAA,GAAG,EAAEW,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,GAAG,EAAEK,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,GAAG,EAAEJ,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAK,IAAA,GAAG,EAAEG,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,UAAD;AAAY,IAAA,KAAK,EAAEc,KAAnB;AAA0B,IAAA,QAAQ,EAAEC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKGD,KAAK,CAACE,SAAN,KAAoB,IAApB,IAA4BF,KAAK,CAACG,OAAN,KAAkB,IAA9C,IACC;AACE,IAAA,GAAG,EAAEd,MADP;AAEE,IAAA,OAAO,EAAE,MAAM;AACbyB,MAAAA,KAAK,CAAC,cAAD,EAAiB;AACpBC,QAAAA,MAAM,EAAE,MADY;AAEpBC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFW;AAKpBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBjB,UAAAA,SAAS,EAAEF,KAAK,CAACE,SAAN,CAAgBkB,WAAhB,GAA8BC,KAA9B,CAAoC,GAApC,EAAyC,CAAzC,CADQ;AAEnBlB,UAAAA,OAAO,EAAEH,KAAK,CAACG,OAAN,CAAciB,WAAd,GAA4BC,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC,CAFU;AAGnBC,UAAAA,KAAK,EAAE3C,MAAM,CAAC4C,GAAP,CAAW,OAAX;AAHY,SAAf,CALc,CAShB;;AATgB,OAAjB,CAAL,CAWGC,IAXH,CAWSC,QAAD,IAAc;AAClBlB,QAAAA,OAAO,CAACC,GAAR,CAAYiB,QAAZ;AACA,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAdH,EAeGF,IAfH,CAeSE,IAAD,IAAU;AACdnB,QAAAA,OAAO,CAACC,GAAR,CAAYkB,IAAI,CAACC,EAAjB;AACAd,QAAAA,YAAY,CAACa,IAAI,CAACC,EAAN,CAAZ;AACD,OAlBH;AAmBD,KAtBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,EAiCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,GAAG,EAAElC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAEGgB,eAAe,CAACmB,GAAhB,CAAqBC,IAAD,IAAU;AAC7B,WAAO;AAAI,MAAA,GAAG,EAAErC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBqC,IAAI,CAACC,YAAL,EAAjB,CAAP;AACD,GAFA,CAFH,CADF,CAjCF,EAyCE;AAAK,IAAA,GAAG,EAAEvC,IAAV;AAAgB,IAAA,MAAM,EAAE,CAACqB,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,GAAG,EAAE7B,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE;AAAK,IAAA,GAAG,EAAEC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,MAAM,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAakC,IAAI,CAACC,SAAL,CAAerB,QAAf,CAAb,CADF,EAEE,IAAC,WAAD;AACE,IAAA,OAAO,EAAEH,OADX;AAEE,IAAA,KAAK,EAAEG,QAFT;AAGE,IAAA,QAAQ,EAAEC,WAHZ;AAIE,IAAA,UAAU,EAAE,QAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE;AACE,IAAA,OAAO,EAAE,MAAM;AACbe,MAAAA,KAAK,CAAC,WAAD,EAAc;AACjBC,QAAAA,MAAM,EAAE,MADS;AAEjBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPe,UAAAA,MAAM,EAAE;AAFD,SAFQ;AAMjBd,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBa,UAAAA,QAAQ,EAAElC,QAAQ,CAAC8B,GAAT,CAAcK,GAAD,IAAS;AAC9B,mBAAOA,GAAG,CAACrC,KAAX;AACD,WAFS,CADS;AAInBgB,UAAAA,SAAS,EAAEA;AAJQ,SAAf,CANW,CAWb;;AAXa,OAAd,CAAL,CAaGY,IAbH,CAaSC,QAAD,IAAc;AAClBlB,QAAAA,OAAO,CAACC,GAAR,CAAYiB,QAAZ;AACA,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAhBH,EAiBGF,IAjBH,CAiBSE,IAAD,IAAU;AACdnB,QAAAA,OAAO,CAACC,GAAR,CAAYkB,IAAZ;AACAR,QAAAA,IAAI,CAACC,SAAL,CAAeO,IAAf;AACD,OApBH;AAqBD,KAvBH;AAwBE,IAAA,GAAG,EAAEpC,YAxBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CAFF,CAzCF,CAFF,EAoFE;AAAK,IAAA,GAAG,EAAEF,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,IAAD;AAAM,IAAA,IAAI,EAAE,cAAcwB,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,IAAR;AAAa,IAAA,GAAG,EAAE3B,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF,CApFF,CALF,CADF;AAoGD","sourcesContent":["import React, { useState } from 'react';\nimport MultiSelect from 'react-multi-select-component';\n/** @jsx jsx */\n/** @jsxFrag React.Fragment */\nimport { jsx, css } from '@emotion/core';\nimport Link from 'next/link';\nimport Datepicker from '../components/Datepicker';\nimport Header from '../components/Header';\nimport { START_DATE } from '@datepicker-react/hooks';\nimport Cookie from 'js-cookie';\nimport { differenceInCalendarDays, eachDayOfInterval } from 'date-fns';\n\n//================================================================================\n// Style\n//================================================================================\n\nconst app = css`\n  min-height: 100vh;\n  padding: 0 0.5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-family: 'Karla', sans-serif;\n`;\n\nconst h2 = css`\n  color: #4abdac;\n  font-family: 'Karla', sans-serif;\n  letter-spacing: 0.1em;\n  text-align: center;\n  padding-top: 10px;\n  padding-bottom: 10px;\n`;\n\nconst dropdown = css`\n  width: 50%;\n  margin: auto;\n`;\n\nconst readyToGo = css`\n  color: #f7b733;\n  font-size: 40px;\n  text-decoration: none;\n  font-family: 'Karla', sans-serif;\n  margin-left: 40%;\n`;\n\nconst calendar = css`\n  margin: auto;\n`;\n\nconst main = css`\n  padding: 5rem 0;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 20px;\n  font-family: 'Karla', sans-serif;\n`;\n\nconst divToGo = css``;\n\nconst button = css`\n  width: 70px;\n  font-family: 'Karla', sans-serif;\n  margin: auto;\n  margin-top: 40px;\n  border-radius: 4px;\n  color: #4abdac;\n  border: 2px solid #4abdac;\n  padding: 10px;\n  font-weight: bold;\n  margin-bottom: 50px;\n`;\n\nconst selectButton = css`\n  width: 70px;\n  font-family: 'Karla', sans-serif;\n  text-align: center;\n  margin-top: 40px;\n  border-radius: 4px;\n  color: #4abdac;\n  border: 2px solid #4abdac;\n  padding: 10px;\n  font-weight: bold;\n  margin-bottom: 30px;\n`;\n\nconst tags = css`\n  height: 500px;\n`;\n\nconst dates = css`\n  list-style: none;\n  line-height: 2.5;\n  font-size: 16px;\n`;\n\nconst section = css`\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  margin: auto;\n  font-size: 20px;\n  line-height: 2.5;\n`;\n\n//================================================================================\n// Function\n//================================================================================\n\nexport default function Interests() {\n  // fetch(\n  //   'https://data.wien.gv.at/daten/geo?service=WFS&request=GetFeature&version=1.1.0&typeName=ogdwien:SPAZIERPUNKTOGD &srsName=EPSG:4326&outputFormat=json',\n  // )\n  //   .then((res) => res.json())\n  //   .then((json) => console.log(json));\n\n  const options = [\n    { value: '1', label: 'sights' },\n    { value: '2', label: 'classical music' },\n    { value: '3', label: 'palaces' },\n    { value: '4', label: 'parks' },\n    { value: '5', label: 'churchs' },\n    { value: '6', label: 'markets' },\n    { value: '7', label: 'coffee houses' },\n    { value: '8', label: 'typical food' },\n    { value: '9', label: 'vegan food' },\n    { value: '10', label: 'museums' },\n    { value: '11', label: 'theaters' },\n    { value: '12', label: 'clubs' },\n  ];\n\n  //multiselector\n  const [selected, setSelected] = useState([]);\n\n  //calendar\n  const [state, setState] = useState({\n    startDate: null,\n    endDate: null,\n    focusedInput: START_DATE,\n  });\n\n  const result = differenceInCalendarDays(state.endDate, state.startDate);\n  const resultDays = result + 1;\n  // alert('You have selected ' + resultDays + 'day(s)');\n  console.log(resultDays);\n\n  // function array() {\n  let datesInInterval = [];\n  if (state.startDate !== null && state.endDate !== null) {\n    datesInInterval = eachDayOfInterval({\n      start: state.startDate,\n      end: state.endDate,\n    });\n  }\n\n  // const [select, setSelect] = useState(['']);\n\n  const [journeyId, setJourneyId] = useState();\n\n  return (\n    <>\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Karla&display=swap\"\n        rel=\"stylesheet\"\n      ></link>\n      <div css={app}>\n        <Header />\n        <div css={main}>\n          <h2 css={h2}>1. Choose your dates </h2>\n          <div css={calendar}>\n            <Datepicker state={state} setState={setState} />\n          </div>\n          {state.startDate !== null && state.endDate !== null && (\n            <button\n              css={button}\n              onClick={() => {\n                fetch('/api/journey', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json',\n                  },\n                  body: JSON.stringify({\n                    startDate: state.startDate.toISOString().split('T')[0],\n                    endDate: state.endDate.toISOString().split('T')[0],\n                    token: Cookie.get('token'),\n                  }), // body data type must match \"Content-Type\" header\n                })\n                  .then((response) => {\n                    console.log(response);\n                    return response.json();\n                  })\n                  .then((json) => {\n                    console.log(json.id);\n                    setJourneyId(json.id);\n                  });\n              }}\n            >\n              submit\n            </button>\n          )}\n          <section>\n            <ul css={section}>\n              Choose for each day the places you want to visit:\n              {datesInInterval.map((date) => {\n                return <li css={dates}>{date.toDateString()}</li>;\n              })}\n            </ul>\n          </section>\n          <div css={tags} hidden={!journeyId}>\n            <h2 css={h2}>2. What are your interests:</h2>\n            <div css={dropdown}>\n              <pre hidden>{JSON.stringify(selected)}</pre>\n              <MultiSelect\n                options={options}\n                value={selected}\n                onChange={setSelected}\n                labelledBy={'Select'}\n              />\n              <button\n                onClick={() => {\n                  fetch('/api/tags', {\n                    method: 'POST',\n                    headers: {\n                      'Content-Type': 'application/json',\n                      Accept: 'application/json',\n                    },\n                    body: JSON.stringify({\n                      placeIds: selected.map((tag) => {\n                        return tag.value;\n                      }),\n                      journeyId: journeyId,\n                    }), // body data type must match \"Content-Type\" header\n                  })\n                    .then((response) => {\n                      console.log(response);\n                      return response.json();\n                    })\n                    .then((json) => {\n                      console.log(json);\n                      JSON.stringify(json);\n                    });\n                }}\n                css={selectButton}\n              >\n                submit\n              </button>\n            </div>\n          </div>\n        </div>\n        <div css={divToGo}>\n          <Link href={'/journey/' + journeyId}>\n            <a href=\"#a\" css={readyToGo}>\n              Get your plan! &#x0226B;\n            </a>\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}