{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/gabrielasanchez/projects/wolfis-trip/components/Weather.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    width: 140px;\\n    font-family: 'Karla', cursive;\\n    font-size: 20px;\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\n/** @jsx jsx */\n\n/** @jsxFrag React.Fragment */\n\nimport { jsx, css } from '@emotion/core';\nexport default function weather() {\n  _s();\n\n  var widget = css(_templateObject());\n\n  var _useState = useState(''),\n      temperature = _useState[0],\n      setTemperature = _useState[1];\n\n  var _useState2 = useState(''),\n      description = _useState2[0],\n      setDescription = _useState2[1];\n\n  var api_key = 'ffc63954e8b3eb859d3685f92e76982b'; // fetch the url to get city,country,temp,description\n\n  var weatherURL = \"https://api.openweathermap.org/data/2.5/weather?q=Vienna,Austria&appid=\".concat(api_key);\n  fetch(weatherURL).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var tempInCel = data.main.temp - 273.15;\n    setTemperature(tempInCel.toFixed(2) + '°C');\n    setDescription(data.weather[0].description);\n  });\n  return jsx(React.Fragment, null, jsx(\"div\", {\n    css: widget,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, temperature), jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, description)));\n}\n\n_s(weather, \"Gh1wwpSBQS5ZIWxkFSRuFlLX/yM=\");","map":{"version":3,"sources":["/Users/gabrielasanchez/projects/wolfis-trip/components/Weather.js"],"names":["React","useState","jsx","css","weather","widget","temperature","setTemperature","description","setDescription","api_key","weatherURL","fetch","then","res","json","data","tempInCel","main","temp","toFixed"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA;;AACA;;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,MAAMC,MAAM,GAAGF,GAAH,mBAAZ;;AADgC,kBAOMF,QAAQ,CAAC,EAAD,CAPd;AAAA,MAOzBK,WAPyB;AAAA,MAOZC,cAPY;;AAAA,mBAQMN,QAAQ,CAAC,EAAD,CARd;AAAA,MAQzBO,WARyB;AAAA,MAQZC,cARY;;AAUhC,MAAMC,OAAO,GAAG,kCAAhB,CAVgC,CAWhC;;AAEA,MAAMC,UAAU,oFAA6ED,OAA7E,CAAhB;AAEAE,EAAAA,KAAK,CAACD,UAAD,CAAL,CACGE,IADH,CACQ,UAACC,GAAD;AAAA,WAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,GADR,EAEGF,IAFH,CAEQ,UAACG,IAAD,EAAU;AACd,QAAMC,SAAS,GAAGD,IAAI,CAACE,IAAL,CAAUC,IAAV,GAAiB,MAAnC;AACAZ,IAAAA,cAAc,CAACU,SAAS,CAACG,OAAV,CAAkB,CAAlB,IAAuB,IAAxB,CAAd;AACAX,IAAAA,cAAc,CAACO,IAAI,CAACZ,OAAL,CAAa,CAAb,EAAgBI,WAAjB,CAAd;AACD,GANH;AAQA,SACE,0BACE;AAAK,IAAA,GAAG,EAAEH,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,WAAJ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,WAAJ,CAHF,CADF,CADF;AASD;;GAhCuBJ,O","sourcesContent":["import React, { useState } from 'react';\n/** @jsx jsx */\n/** @jsxFrag React.Fragment */\nimport { jsx, css } from '@emotion/core';\n\nexport default function weather() {\n  const widget = css`\n    width: 140px;\n    font-family: 'Karla', cursive;\n    font-size: 20px;\n  `;\n\n  const [temperature, setTemperature] = useState('');\n  const [description, setDescription] = useState('');\n\n  const api_key = 'ffc63954e8b3eb859d3685f92e76982b';\n  // fetch the url to get city,country,temp,description\n\n  const weatherURL = `https://api.openweathermap.org/data/2.5/weather?q=Vienna,Austria&appid=${api_key}`;\n\n  fetch(weatherURL)\n    .then((res) => res.json())\n    .then((data) => {\n      const tempInCel = data.main.temp - 273.15;\n      setTemperature(tempInCel.toFixed(2) + '°C');\n      setDescription(data.weather[0].description);\n    });\n\n  return (\n    <>\n      <div css={widget}>\n        {/* Create input field and button*/}\n        <p>{temperature}</p>\n        <p>{description}</p>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}