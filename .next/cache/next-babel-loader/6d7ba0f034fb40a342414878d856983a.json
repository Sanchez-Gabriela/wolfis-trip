{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielasanchez/projects/wolfis-trip/components/Datepicker.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/** @jsx jsx */\nimport { useState } from 'react';\nimport { useDatepicker, START_DATE } from '@datepicker-react/hooks';\nimport { jsx } from '@emotion/core';\nimport Month from './Month';\nimport NavButton from './NavButton';\nimport DatepickerContext from './datepickerContext';\n\nfunction Datepicker() {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    startDate: null,\n    endDate: null,\n    focusedInput: START_DATE\n  });\n  const {\n    firstDayOfWeek,\n    activeMonths,\n    isDateSelected,\n    isDateHovered,\n    isFirstOrLastSelectedDate,\n    isDateBlocked,\n    isDateFocused,\n    focusedDate,\n    onDateHover,\n    onDateSelect,\n    onDateFocus,\n    goToPreviousMonths,\n    goToNextMonths\n  } = useDatepicker({\n    startDate: state.startDate,\n    endDate: state.endDate,\n    focusedInput: state.focusedInput,\n    onDatesChange: handleDateChange\n  });\n\n  function handleDateChange(data) {\n    if (!data.focusedInput) {\n      setState(_objectSpread(_objectSpread({}, data), {}, {\n        focusedInput: START_DATE\n      }));\n    } else {\n      setState(data);\n    }\n  }\n\n  return jsx(DatepickerContext.Provider, {\n    value: {\n      focusedDate,\n      isDateFocused,\n      isDateSelected,\n      isDateHovered,\n      isDateBlocked,\n      isFirstOrLastSelectedDate,\n      onDateSelect,\n      onDateFocus,\n      onDateHover\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Focused input: \"), state.focusedInput), jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Start date: \"), state.startDate && state.startDate.toLocaleString()), jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"End date: \"), state.endDate && state.endDate.toLocaleString()), jsx(NavButton, {\n    onClick: goToPreviousMonths,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Previous\"), jsx(NavButton, {\n    onClick: goToNextMonths,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Next\"), jsx(\"div\", {\n    css: {\n      fontFamily: 'Karla',\n      display: 'grid',\n      margin: '32px 0 0',\n      gridTemplateColumns: `repeat(${activeMonths.length}, 300px)`,\n      gridGap: '0 64px',\n      lineHeight: '1.8'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, activeMonths.map(month => jsx(Month, {\n    key: `${month.year}-${month.month}`,\n    year: month.year,\n    month: month.month,\n    firstDayOfWeek: firstDayOfWeek,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Datepicker;","map":{"version":3,"sources":["/Users/gabrielasanchez/projects/wolfis-trip/components/Datepicker.js"],"names":["useState","useDatepicker","START_DATE","jsx","Month","NavButton","DatepickerContext","Datepicker","state","setState","startDate","endDate","focusedInput","firstDayOfWeek","activeMonths","isDateSelected","isDateHovered","isFirstOrLastSelectedDate","isDateBlocked","isDateFocused","focusedDate","onDateHover","onDateSelect","onDateFocus","goToPreviousMonths","goToNextMonths","onDatesChange","handleDateChange","data","toLocaleString","fontFamily","display","margin","gridTemplateColumns","length","gridGap","lineHeight","map","month","year"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { useState } from 'react';\nimport { useDatepicker, START_DATE } from '@datepicker-react/hooks';\nimport { jsx } from '@emotion/core';\nimport Month from './Month';\nimport NavButton from './NavButton';\nimport DatepickerContext from './datepickerContext';\n\nfunction Datepicker() {\n  const [state, setState] = useState({\n    startDate: null,\n    endDate: null,\n    focusedInput: START_DATE,\n  });\n  const {\n    firstDayOfWeek,\n    activeMonths,\n    isDateSelected,\n    isDateHovered,\n    isFirstOrLastSelectedDate,\n    isDateBlocked,\n    isDateFocused,\n    focusedDate,\n    onDateHover,\n    onDateSelect,\n    onDateFocus,\n    goToPreviousMonths,\n    goToNextMonths,\n  } = useDatepicker({\n    startDate: state.startDate,\n    endDate: state.endDate,\n    focusedInput: state.focusedInput,\n    onDatesChange: handleDateChange,\n  });\n\n  function handleDateChange(data) {\n    if (!data.focusedInput) {\n      setState({ ...data, focusedInput: START_DATE });\n    } else {\n      setState(data);\n    }\n  }\n\n  return (\n    <DatepickerContext.Provider\n      value={{\n        focusedDate,\n        isDateFocused,\n        isDateSelected,\n        isDateHovered,\n        isDateBlocked,\n        isFirstOrLastSelectedDate,\n        onDateSelect,\n        onDateFocus,\n        onDateHover,\n      }}\n    >\n      <div>\n        <strong>Focused input: </strong>\n        {state.focusedInput}\n      </div>\n      <div>\n        <strong>Start date: </strong>\n        {state.startDate && state.startDate.toLocaleString()}\n      </div>\n      <div>\n        <strong>End date: </strong>\n        {state.endDate && state.endDate.toLocaleString()}\n      </div>\n\n      <NavButton onClick={goToPreviousMonths}>Previous</NavButton>\n      <NavButton onClick={goToNextMonths}>Next</NavButton>\n\n      <div\n        css={{\n          fontFamily: 'Karla',\n          display: 'grid',\n          margin: '32px 0 0',\n          gridTemplateColumns: `repeat(${activeMonths.length}, 300px)`,\n          gridGap: '0 64px',\n          lineHeight: '1.8',\n        }}\n      >\n        {activeMonths.map((month) => (\n          <Month\n            key={`${month.year}-${month.month}`}\n            year={month.year}\n            month={month.month}\n            firstDayOfWeek={firstDayOfWeek}\n          />\n        ))}\n      </div>\n    </DatepickerContext.Provider>\n  );\n}\n\nexport default Datepicker;\n"]},"metadata":{},"sourceType":"module"}