{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/** @jsx jsx */\nimport { useState } from 'react';\nimport { useDatepicker, START_DATE } from '@datepicker-react/hooks';\nimport { jsx } from '@emotion/core';\nimport Month from './Month';\nimport NavButton from './NavButton';\nimport DatepickerContext from './datepickerContext';\n\nfunction Datepicker() {\n  var _useState = useState({\n    startDate: null,\n    endDate: null,\n    focusedInput: START_DATE\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useDatepicker = useDatepicker({\n    startDate: state.startDate,\n    endDate: state.endDate,\n    focusedInput: state.focusedInput,\n    onDatesChange: handleDateChange\n  }),\n      firstDayOfWeek = _useDatepicker.firstDayOfWeek,\n      activeMonths = _useDatepicker.activeMonths,\n      isDateSelected = _useDatepicker.isDateSelected,\n      isDateHovered = _useDatepicker.isDateHovered,\n      isFirstOrLastSelectedDate = _useDatepicker.isFirstOrLastSelectedDate,\n      isDateBlocked = _useDatepicker.isDateBlocked,\n      isDateFocused = _useDatepicker.isDateFocused,\n      focusedDate = _useDatepicker.focusedDate,\n      onDateHover = _useDatepicker.onDateHover,\n      onDateSelect = _useDatepicker.onDateSelect,\n      onDateFocus = _useDatepicker.onDateFocus,\n      goToPreviousMonths = _useDatepicker.goToPreviousMonths,\n      goToNextMonths = _useDatepicker.goToNextMonths;\n\n  function handleDateChange(data) {\n    if (!data.focusedInput) {\n      setState(_objectSpread(_objectSpread({}, data), {}, {\n        focusedInput: START_DATE\n      }));\n    } else {\n      setState(data);\n    }\n  }\n\n  return jsx(DatepickerContext.Provider, {\n    value: {\n      focusedDate: focusedDate,\n      isDateFocused: isDateFocused,\n      isDateSelected: isDateSelected,\n      isDateHovered: isDateHovered,\n      isDateBlocked: isDateBlocked,\n      isFirstOrLastSelectedDate: isFirstOrLastSelectedDate,\n      onDateSelect: onDateSelect,\n      onDateFocus: onDateFocus,\n      onDateHover: onDateHover\n    }\n  }, jsx(\"div\", null, jsx(\"strong\", null, \"Focused input: \"), state.focusedInput), jsx(\"br\", null), jsx(\"div\", null, jsx(\"strong\", null, \"Start date: \"), state.startDate && state.startDate.toLocaleString()), jsx(\"br\", null), jsx(\"div\", null, jsx(\"strong\", null, \"End date: \"), state.endDate && state.endDate.toLocaleString()), jsx(\"br\", null), jsx(\"strong\", null), jsx(NavButton, {\n    onClick: goToPreviousMonths\n  }, \"Previous\"), jsx(NavButton, {\n    onClick: goToNextMonths\n  }, \"Next\"), jsx(\"div\", {\n    css: {\n      fontFamily: 'Karla',\n      display: 'grid',\n      margin: '32px 0 0',\n      gridTemplateColumns: \"repeat(\".concat(activeMonths.length, \", 300px)\"),\n      gridGap: '0 64px'\n    }\n  }, activeMonths.map(function (month) {\n    return jsx(Month, {\n      key: \"\".concat(month.year, \"-\").concat(month.month),\n      year: month.year,\n      month: month.month,\n      firstDayOfWeek: firstDayOfWeek\n    });\n  })));\n}\n\nexport default Datepicker;","map":null,"metadata":{},"sourceType":"module"}