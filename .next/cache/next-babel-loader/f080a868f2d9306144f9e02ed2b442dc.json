{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/gabrielasanchez/projects/wolfis-trip/components/Datepicker.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/** @jsx jsx */\nimport { useState } from 'react';\nimport { useDatepicker, START_DATE } from '@datepicker-react/hooks';\nimport { jsx } from '@emotion/core';\nimport Month from './Month';\nimport NavButton from './NavButton';\nimport DatepickerContext from './datepickerContext';\nexport function Datepicker() {\n  return _Datepicker.apply(this, arguments);\n}\n_c2 = Datepicker;\n\nfunction _Datepicker() {\n  var _s = $RefreshSig$();\n\n  _Datepicker = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _this = this;\n\n    var _useState, state, setState, _useDatepicker, firstDayOfWeek, activeMonths, isDateSelected, isDateHovered, isFirstOrLastSelectedDate, isDateBlocked, isDateFocused, focusedDate, onDateHover, onDateSelect, onDateFocus, goToPreviousMonths, goToNextMonths, handleDateChange;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            handleDateChange = function _handleDateChange(data) {\n              if (!data.focusedInput) {\n                setState(_objectSpread(_objectSpread({}, data), {}, {\n                  focusedInput: START_DATE\n                }));\n              } else {\n                setState(data);\n              }\n            };\n\n            _s();\n\n            _useState = useState({\n              startDate: null,\n              endDate: null,\n              focusedInput: START_DATE\n            }), state = _useState[0], setState = _useState[1];\n            _useDatepicker = useDatepicker({\n              startDate: state.startDate,\n              endDate: state.endDate,\n              focusedInput: state.focusedInput,\n              onDatesChange: handleDateChange\n            }), firstDayOfWeek = _useDatepicker.firstDayOfWeek, activeMonths = _useDatepicker.activeMonths, isDateSelected = _useDatepicker.isDateSelected, isDateHovered = _useDatepicker.isDateHovered, isFirstOrLastSelectedDate = _useDatepicker.isFirstOrLastSelectedDate, isDateBlocked = _useDatepicker.isDateBlocked, isDateFocused = _useDatepicker.isDateFocused, focusedDate = _useDatepicker.focusedDate, onDateHover = _useDatepicker.onDateHover, onDateSelect = _useDatepicker.onDateSelect, onDateFocus = _useDatepicker.onDateFocus, goToPreviousMonths = _useDatepicker.goToPreviousMonths, goToNextMonths = _useDatepicker.goToNextMonths;\n            return _context.abrupt(\"return\", jsx(DatepickerContext.Provider, {\n              value: {\n                focusedDate: focusedDate,\n                isDateFocused: isDateFocused,\n                isDateSelected: isDateSelected,\n                isDateHovered: isDateHovered,\n                isDateBlocked: isDateBlocked,\n                isFirstOrLastSelectedDate: isFirstOrLastSelectedDate,\n                onDateSelect: onDateSelect,\n                onDateFocus: onDateFocus,\n                onDateHover: onDateHover\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 5\n              }\n            }, jsx(\"br\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 7\n              }\n            }), jsx(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 7\n              }\n            }, jsx(\"strong\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 9\n              }\n            }, \"Start date: \"), state.startDate && state.startDate.toLocaleString()), jsx(\"br\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 7\n              }\n            }), jsx(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 7\n              }\n            }, jsx(\"strong\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 9\n              }\n            }, \"End date: \"), state.endDate && state.endDate.toLocaleString()), jsx(\"br\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 7\n              }\n            }), jsx(\"strong\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 7\n              }\n            }), jsx(NavButton, {\n              onClick: goToPreviousMonths,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 7\n              }\n            }, \"Previous\"), jsx(NavButton, {\n              onClick: goToNextMonths,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 7\n              }\n            }, \"Next\"), jsx(\"div\", {\n              css: {\n                fontFamily: 'Karla',\n                display: 'grid',\n                margin: '32px 0 0',\n                gridTemplateColumns: \"repeat(\".concat(activeMonths.length, \", 300px)\"),\n                gridGap: '0 64px'\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 7\n              }\n            }, activeMonths.map(function (month) {\n              return jsx(Month, {\n                key: \"\".concat(month.year, \"-\").concat(month.month),\n                year: month.year,\n                month: month.month,\n                firstDayOfWeek: firstDayOfWeek,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 11\n                }\n              });\n            }))));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }), \"tv63PnGWGeumP/bea+N4+tv8cT4=\", false, function () {\n    return [useDatepicker];\n  }));\n  return _Datepicker.apply(this, arguments);\n}\n\n_c = Datepicker;\nexport default Datepicker;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Datepicker\");\n$RefreshReg$(_c2, \"Datepicker\");","map":{"version":3,"sources":["/Users/gabrielasanchez/projects/wolfis-trip/components/Datepicker.js"],"names":["useState","useDatepicker","START_DATE","jsx","Month","NavButton","DatepickerContext","Datepicker","handleDateChange","data","focusedInput","setState","startDate","endDate","state","onDatesChange","firstDayOfWeek","activeMonths","isDateSelected","isDateHovered","isFirstOrLastSelectedDate","isDateBlocked","isDateFocused","focusedDate","onDateHover","onDateSelect","onDateFocus","goToPreviousMonths","goToNextMonths","toLocaleString","fontFamily","display","margin","gridTemplateColumns","length","gridGap","map","month","year"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { useState } from 'react';\nimport { useDatepicker, START_DATE } from '@datepicker-react/hooks';\nimport { jsx } from '@emotion/core';\nimport Month from './Month';\nimport NavButton from './NavButton';\nimport DatepickerContext from './datepickerContext';\n\nexport async function Datepicker() {\n  const [state, setState] = useState({\n    startDate: null,\n    endDate: null,\n    focusedInput: START_DATE,\n  });\n  const {\n    firstDayOfWeek,\n    activeMonths,\n    isDateSelected,\n    isDateHovered,\n    isFirstOrLastSelectedDate,\n    isDateBlocked,\n    isDateFocused,\n    focusedDate,\n    onDateHover,\n    onDateSelect,\n    onDateFocus,\n    goToPreviousMonths,\n    goToNextMonths,\n  } = useDatepicker({\n    startDate: state.startDate,\n    endDate: state.endDate,\n    focusedInput: state.focusedInput,\n    onDatesChange: handleDateChange,\n  });\n\n  function handleDateChange(data) {\n    if (!data.focusedInput) {\n      setState({ ...data, focusedInput: START_DATE });\n    } else {\n      setState(data);\n    }\n  }\n\n  return (\n    <DatepickerContext.Provider\n      value={{\n        focusedDate,\n        isDateFocused,\n        isDateSelected,\n        isDateHovered,\n        isDateBlocked,\n        isFirstOrLastSelectedDate,\n        onDateSelect,\n        onDateFocus,\n        onDateHover,\n      }}\n    >\n      {/* <div>\n        <strong>Focused input: </strong>\n        {state.focusedInput}\n      </div> */}\n      <br />\n      <div>\n        <strong>Start date: </strong>\n        {state.startDate && state.startDate.toLocaleString()}\n      </div>\n      <br />\n      <div>\n        <strong>End date: </strong>\n        {state.endDate && state.endDate.toLocaleString()}\n      </div>\n      <br />\n      <strong></strong>\n\n      <NavButton onClick={goToPreviousMonths}>Previous</NavButton>\n      <NavButton onClick={goToNextMonths}>Next</NavButton>\n\n      <div\n        css={{\n          fontFamily: 'Karla',\n          display: 'grid',\n          margin: '32px 0 0',\n          gridTemplateColumns: `repeat(${activeMonths.length}, 300px)`,\n          gridGap: '0 64px',\n        }}\n      >\n        {activeMonths.map((month) => (\n          <Month\n            key={`${month.year}-${month.month}`}\n            year={month.year}\n            month={month.month}\n            firstDayOfWeek={firstDayOfWeek}\n          />\n        ))}\n      </div>\n    </DatepickerContext.Provider>\n  );\n}\n\nexport default Datepicker;\n"]},"metadata":{},"sourceType":"module"}